<script>
  let userid = "";
  let base64String = "";
  let currentPassword = "";
  let question_id = "";
  let globalYesChoiceId = "";
  let globalNoChoiceId = "";
  $(document).ready(function () {
    LoadTable();
    LoadAssessmentType();
    EditLoadAssessmentType();
    LoadIfYes();
    LoadIfNo();
    EditLoadIfYes();
    EditLoadIfNo();

    function LoadTable() {
      $("#dataTableQuestions").DataTable({
        destroy: true,
        processing: true,
        serverSide: true,
        paging: false,
        searching: false,
        info: false,
        scrollY: 600,
        scrollCollapse: true,
        serverMethod: "GET",
        ajax: {
          url: "/questions/load",
          dataSrc: (json) => {
            var finalData = [];
            var data = json.data;

            $.each(data, (key, item) => {
              var action = `
                <button id="editBtn" class="btn text-primary" name="editBtn" data-bs-toggle="modal" data-bs-target="#editquestionsmodal">
                  <i class="fas fa-fw fa-pen"></i>
                </button>
              `;

              finalData.push({
                question_id: item.question_id,
                question_name: item.question_name,
                assessment_name: item.assessment_name,
                question_type: item.question_type,
                action: action,
              });
            });

            return finalData;
          },
        },
        columns: [
          { data: "question_id" },
          { data: "question_name" },
          { data: "assessment_name" },
          { data: "question_type" },
          { data: "action" },
        ],
        createdRow: function (row, data, dataIndex) {
          // var jobStatusCell = $(row).find("td:eq(2)");
          // var jobStatusText = data.assessment_name;

          // var jobStatusClass = "";
          // if (jobStatusText === "STEM") {
          //   jobStatusClass =
          //     "badge badge-sm bg-gradient-success text-white rounded-pill";
          // } else if (jobStatusText === "HE") {
          //   jobStatusClass =
          //     "badge badge-sm bg-gradient-danger text-white rounded-pill";
          // }

          // jobStatusCell.html(
          //   `<span class="${jobStatusClass}">${jobStatusText}</span>`
          // );

          $("td", row).each(function () {
            this.style.textAlign = "center";
            this.style.verticalAlign = "middle";
            this.style.fontSize = "14px";
          });
        },
        initComplete: function () {
          $("#dataTableStrandsType thead th").css({
            "font-size": "14px",
            "font-weight": "bold",
            "text-align": "center",
          });
        },
      });
    }

    function LoadAssessmentType() {
      $.ajax({
        type: "GET",
        url: "/assessments/load",
        success: function (result) {
          var data = result.data;

          $.each(data, function (key, item) {
            var options = new Option(item.assessment_id, item.assessment_id);
            $(options).html(item.assessment_name);
            $("#asstype").append(options);
          });
        },
        error: function (result) {
          alert("error: " + result.data);
        },
      });
    }

    function LoadIfYes() {
      $.ajax({
        type: "GET",
        url: "/personality_type/load",
        success: function (result) {
          var data = result.data;

          $.each(data, function (key, item) {
            var options = new Option(item.type_id, item.type_id);
            $(options).html(item.code);
            $("#ifyes").append(options);
          });
        },
        error: function (result) {
          alert("error: " + result.data);
        },
      });
    }


    function LoadIfNo() {
      $.ajax({
        type: "GET",
        url: "/personality_type/load",
        success: function (result) {
          var data = result.data;

          $.each(data, function (key, item) {
            var options = new Option(item.type_id, item.type_id);
            $(options).html(item.code);
            $("#ifno").append(options);
          });
        },
        error: function (result) {
          alert("error: " + result.data);
        },
      });
    }

    $(document).on("click", "#questionSaveBtn", function () {
      let assessmenttype = $("#asstype").val();
      let questionname = $("#questionname").val();
      let question_text = $("#qttext").val();
      let ifyes = $("#ifyes").val();
      let ifno = $("#ifno").val();
      let ifyesname = $("#ifyesname").val();
      let ifnoname = $("#ifnoname").val();

      var message = "";

      if (assessmenttype == "" || assessmenttype == null) {
        message += "Assessment Type is required. ";
      }

      if (questionname == "" || questionname == null) {
        message += "Question Name is required. ";
      }

      if (question_text == "" || question_text == null) {
        message += "Question Text is required. ";
      }

      if (ifyes == "" || ifyes == null) {
        message += "If Yes is required. ";
      }

      if (ifno == "" || ifno == null) {
        message += "If No is required. ";
      }

      if (ifyesname == "" || ifyesname == null) {
        message += "If Yes Name is required. ";
      }

      if (ifnoname == "" || ifnoname == null) {
        message += "If No Name is required. ";
      }

      if (message !== "") {
        toastr.error(message, "Validation Error");
      } else {
        $.ajax({
          type: "POST",
          url: "/questions/save",
          data: {
            assessment_id: assessmenttype,
            question_name: questionname,
            question_text: question_text,
            ifyes: ifyes,
            ifno: ifno,
            ifyesname: ifyesname,
            ifnoname: ifnoname,
          },
          success: function (result) {
            if (result.msg == "success") {
              toastr.success("Saved Successfully", "Success");

              // Reload page after toast
              setTimeout(function () {
                window.location.reload();
              }, 2000);
              LoadTable();
            } else {
              toastr.warning("Data already exists!", "Warning");
            }
          },
          error: function (err) {
            toastr.warning("Data already exists!", "Warning");
          },
        });
      }
    });

    $("#dataTableQuestions tbody").on("click", "tr", function () {
      var dataRow = [];
      $(this)
        .closest("tr")
        .find("td")
        .each(function () {
          dataRow.push($(this).text());
        });
      question_id = dataRow[0];
      console.log(dataRow);
    });

    function EditLoadAssessmentType() {
      $.ajax({
        type: "GET",
        url: "/assessments/load",
        success: function (result) {
          var data = result.data;

          $.each(data, function (key, item) {
            var options = new Option(item.assessment_id, item.assessment_id);
            $(options).html(item.assessment_name);
            $("#editasstype").append(options);
          });
        },
        error: function (result) {
          alert("error: " + result.data);
        },
      });
    }

    function EditLoadIfYes() {
      $.ajax({
        type: "GET",
        url: "/personality_type/load",
        success: function (result) {
          var data = result.data;

          $.each(data, function (key, item) {
            var options = new Option(item.type_id, item.type_id);
            $(options).html(item.code);
            $("#editifyes").append(options);
          });
        },
        error: function (result) {
          alert("error: " + result.data);
        },
      });
    }


    function EditLoadIfNo() {
      $.ajax({
        type: "GET",
        url: "/personality_type/load",
        success: function (result) {
          var data = result.data;

          $.each(data, function (key, item) {
            var options = new Option(item.type_id, item.type_id);
            $(options).html(item.code);
            $("#editifno").append(options);
          });
        },
        error: function (result) {
          alert("error: " + result.data);
        },
      });
    }

    $(document).on("click", "#editBtn", function () {
      $.ajax({
        type: "POST",
        url: "/questions/getquestion",
        data: {
          question_id: question_id,
        },
        success: function (result) {
          if (result.msg === "success") {
            const existingData = result.data;
            if (existingData.length > 0) {
              const questionDetails = existingData[0];

              $("#editasstype").val(questionDetails.assessment_id);
              $("#editquestionname").val(questionDetails.question_name);
              $("#editqttext").val(questionDetails.question_text);

              const yesChoice = existingData.find(item => item.choice_type == 'yes');
              const noChoice = existingData.find(item => item.choice_type == 'no');

              if (yesChoice) {
                $("#editifyes").val(yesChoice.personality_id);
                $("#editifyesname").val(yesChoice.choice_name); 
              }

              if (noChoice) {
                $("#editifno").val(noChoice.personality_id); 
                $("#editifnoname").val(noChoice.choice_name); 
              }


              fetchChoicesId(question_id);
            }
          } else {
            toastr.error("Error fetching question data", "Error");
          }
        },
        error: function (err) {
          toastr.error("An error occurred while fetching the question data", "Error");
        },
      });
    });

    function fetchChoicesId(question_id) {
      $.ajax({
        type: "POST",
        url: "questions/getchoicesidyes",
        data: {
          question_id: question_id
        },
        success: function (result) {
          if (result.msg === "success") {
            globalYesChoiceId = result.data.length > 0 ? result.data[0].id : null;
            console.log("Global Yes Choice ID:", globalYesChoiceId);
          } else {
            toastr.error("Error fetching 'Yes' choice ID", "Error");
          }
        },
        error: function (err) {
          toastr.error("An error occurred while fetching 'Yes' choice ID", "Error");
        }
      });
      $.ajax({
        type: "POST",
        url: "questions/getchoicesidno",
        data: {
          question_id: question_id
        },
        success: function (result) {
          if (result.msg === "success") {
            globalNoChoiceId = result.data.length > 0 ? result.data[0].id : null;
            console.log("Global No Choice ID:", globalNoChoiceId);
          } else {
            toastr.error("Error fetching 'No' choice ID", "Error");
          }
        },
        error: function (err) {
          toastr.error("An error occurred while fetching 'No' choice ID", "Error");
        }
      });
    }

    $(document).on("click", "#questionEditBtn", function () {
      let id = question_id;
      let NoChoiceId = globalNoChoiceId;
      let YesChoiceId = globalYesChoiceId;
      let assessment_id = $("#editasstype").val();
      let question_name = $("#editquestionname").val();
      let question_text = $("#editqttext").val();
      let ifyes = $("#editifyes").val();
      let ifno = $("#editifno").val();
      let ifyesname = $("#editifyesname").val();
      let ifnoname = $("#editifnoname").val();

      var message = "";

      if (assessment_id === "") {
        message += "Assessment Type is required. ";
      }

      if (question_name === "") {
        message += "Question Name is required. ";
      }

      if (question_text === "") {
        message += "Question Text is required. ";
      }

      if (ifyes === "") {
        message += "If Yes is required. ";
      }

      if (ifno === "") {
        message += "If No is required. ";
      }

      if (ifyesname === "") {
        message += "If Yes Name is required. ";
      }

      if (ifnoname === "") {
        message += "If No Name is required. ";
      }


      if (message !== "") {
        toastr.error(message, "Validation Error");
      } else {
        $.ajax({
          type: "PUT",
          url: "/questions/edit",
          data: {
            question_id: id,
            globalNoChoiceId: NoChoiceId,
            globalYesChoiceId: YesChoiceId,
            assessment_id: assessment_id,
            question_name: question_name,
            question_text: question_text,
            ifyes: ifyes,
            ifno: ifno,
            ifyesname: ifyesname,
            ifnoname: ifnoname,
          },
          success: function (result) {
            if (result.msg === "success") {
              toastr.success("Update Successfully", "Success");
              setTimeout(function () {
                window.location.reload();
              }, 2000);
              LoadTable();
            } else if (result.msg === "exist") {
              toastr.warning("Data already exists!", "Warning");
            } else {
              toastr.warning("Data already exists!", "Warning");
            }
          },
          error: function (err) {
            toastr.error("An error occurred while saving data.", "Error");
          },
        });
      }
    });

    $(document).on("change", "#announcementimage", function (e) {
      const input = document.getElementById("announcementimage");
      const file = input.files[0];

      const reader = new FileReader();
      reader.readAsDataURL(file);
      reader.onloadend = function () {
        const preview = document.getElementById("preview");
        preview.src = reader.result;
      };
      imageUploaded();
    });

    function imageUploaded() {
      const input = document.getElementById("announcementimage");
      const file = input.files[0];

      var reader = new FileReader();

      reader.onload = function () {
        base64String = reader.result.replace("data:", "").replace(/^.+,/, "");

        imageBase64Stringsep = base64String;
      };
      reader.readAsDataURL(file);
    }

    $(document).on("change", "#editannouncementimage", function (e) {
      const input = document.getElementById("editannouncementimage");
      const file = input.files[0];

      const reader = new FileReader();
      reader.readAsDataURL(file);
      reader.onloadend = function () {
        const preview = document.getElementById("editpreview");
        preview.src = reader.result;
      };
      editimage();
    });

    function editimage() {
      const input = document.getElementById("editannouncementimage");
      const file = input.files[0];

      var reader = new FileReader();

      reader.onload = function () {
        base64String = reader.result.replace("data:", "").replace(/^.+,/, "");

        imageBase64Stringsep = base64String;
      };
      reader.readAsDataURL(file);
    }

    function searchTable() {
      var input, filter, found, table, tr, td, i, j;
      input = document.getElementById("myInput");
      filter = input.value.toUpperCase();
      table = document.getElementById("dataTableQuestions");
      tr = table.getElementsByTagName("tr");
      for (i = 0; i < tr.length; i++) {
        td = tr[i].getElementsByTagName("td");
        for (j = 0; j < td.length; j++) {
          if (td[j].innerHTML.toUpperCase().indexOf(filter) > -1) {
            found = true;
          }
        }
        if (found) {
          tr[i].style.display = "";
          found = false;
        } else {
          tr[i].style.display = "none";
        }
      }
    }

    $(".toggle-password").on("click", function () {
      const targetSelector = $(this).data("target");
      const passwordInput = $(targetSelector);
      const passwordFieldType = passwordInput.attr("type");
      if (passwordFieldType === "password") {
        passwordInput.attr("type", "text");
        $(this).find("i").removeClass("fa-eye").addClass("fa-eye-slash");
      } else {
        passwordInput.attr("type", "password");
        $(this).find("i").removeClass("fa-eye-slash").addClass("fa-eye");
      }
    });
  });
</script>